"""
Django settings for smart_class_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
import dj_database_url


from pathlib import Path
import psycopg2.extensions

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECRET_KEY = 'django-insecure-tc2zra+p)b=icx6$0zjy)jy4hvkj=n0-8qd^w&n9wd*&t+v)sa'
SECRET_KEY = os.environ.get('SECRET_KEY', 'valor_inseguro_para_dev')
# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = [os.environ.get('RENDER_EXTERNAL_HOSTNAME', 'localhost')]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Aplicaciones de terceros
    'rest_framework',
    'corsheaders',

    # Aplicaciones propias
    'users',
    'academic',
    'grades.apps.GradesConfig',
    'ml_predictions.apps.MlPredictionsConfig',
    'audit.apps.AuditConfig',  # Nueva aplicaci√≥n de auditor√≠a
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'audit.middleware.AuditMiddleware',  # Middleware de auditor√≠a (ANTES del NoCache)
    'smart_class_backend.middleware.NoCacheMiddleware',  # Middleware personalizado para deshabilitar cach√©
]

# Configuraci√≥n de CORS
CORS_ALLOW_ALL_ORIGINS = True  # Solo para desarrollo
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cache-control',
    'pragma',
]

# Configuraci√≥n de REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# Configuraci√≥n de JWT
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}

ROOT_URLCONF = 'smart_class_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smart_class_backend.wsgi.application'


# Database - CONFIGURACI√ìN MEJORADA
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {

    'default': dj_database_url.config(
        default='postgresql://postgres:3021@localhost:5432/smart_class_db2',  # üîß Cambia si usas otra base local
        conn_max_age=600
    )
}
# 'default': {
    #    'ENGINE': 'django.db.backends.postgresql',
    #    'NAME': 'smart_class_db2',
    #    'USER': 'postgres',  # Cambia seg√∫n tu configuraci√≥n
    #    'PASSWORD': 'root',  # Cambia seg√∫n tu configuraci√≥n
    #    'HOST': 'localhost',
    #   'PORT': '5432',
    #    'OPTIONS': {
    #        'isolation_level': psycopg2.extensions.ISOLATION_LEVEL_READ_COMMITTED,
    #    },
    #    'CONN_MAX_AGE': 0,  # Deshabilitar pooling de conexiones para desarrollo
    #}
#}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Agregar al final del archivo
AUTH_USER_MODEL = 'users.User'

# ===== CONFIGURACI√ìN DE CACH√â DESHABILITADA PARA DESARROLLO =====
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

# ===== CONFIGURACI√ìN DE SESSION =====
SESSION_CACHE_ALIAS = 'default'
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_COOKIE_AGE = 86400  # 24 horas

# ===== CONFIGURACI√ìN DE LOGGING MEJORADA Y CORREGIDA =====
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
        'audit': {
            'format': '[AUDIT] {levelname} {asctime} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
            'stream': 'ext://sys.stdout',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
        'grades_file': {
            'class': 'logging.FileHandler',
            'filename': 'grades.log',
            'formatter': 'verbose',
            'encoding': 'utf-8',
        },
        'audit_file': {
            'class': 'logging.FileHandler',
            'filename': 'audit.log',
            'formatter': 'audit',
            'encoding': 'utf-8',
        },
        'audit_console': {
            'class': 'logging.StreamHandler',
            'formatter': 'audit',
            'stream': 'ext://sys.stdout',
        },
    },
    'loggers': {
        'grades': {
            'handlers': ['console', 'grades_file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'ml_predictions': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'audit': {
            'handlers': ['audit_console', 'audit_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
}

# ===== CONFIGURACI√ìN ESPEC√çFICA DE AUDITOR√çA =====

# Configurar qu√© acciones auditar autom√°ticamente
AUDIT_SETTINGS = {
    # Auditar autom√°ticamente estas rutas
    'AUTO_AUDIT_PATHS': [
        '/api/users/',
        '/api/academic/',
        '/api/grades/',
        '/api/ml/',
    ],
    
    # No auditar estas rutas (para evitar spam)
    'SKIP_AUDIT_PATHS': [
        '/api/users/token/refresh/',
        '/admin/jsi18n/',
        '/static/',
        '/media/',
        '/api/audit/',  # Evitar recursi√≥n
        '/favicon.ico',
    ],
    
    # Auditar solo m√©todos importantes
    'AUDIT_METHODS': ['POST', 'PUT', 'PATCH', 'DELETE'],
    
    # Auditar algunos GETs espec√≠ficos
    'AUDIT_GET_PATHS': [
        '/api/users/users/',
        '/api/grades/grades/stats/',
        '/api/ml/predictions/',
        '/api/academic/classes/',
    ],
    
    # Retener logs por d√≠as (usado en tareas de limpieza)
    'RETENTION_DAYS': 90,
    
    # Generar res√∫menes diarios autom√°ticamente
    'AUTO_GENERATE_SUMMARIES': True,
    
    # Campos sensibles a filtrar en logs
    'SENSITIVE_FIELDS': ['password', 'token', 'secret', 'key', 'auth', 'csrf'],
    
    # Configuraci√≥n de alertas de seguridad
    'SECURITY_ALERTS': {
        'FAILED_LOGIN_THRESHOLD': 5,  # Alertar despu√©s de N intentos fallidos por hora
        'MASS_DELETION_THRESHOLD': 10,  # Alertar si se eliminan N+ registros en 24h
        'SYSTEM_ERROR_THRESHOLD': 20,  # Alertar si hay N+ errores en 24h
    },
    
    # Configuraci√≥n de retenci√≥n por tipo de log
    'RETENTION_BY_ACTION': {
        'LOGIN': 30,  # Logins se mantienen 30 d√≠as
        'LOGIN_FAILED': 60,  # Intentos fallidos 60 d√≠as
        'DELETE': 365,  # Eliminaciones se mantienen 1 a√±o
        'CREATE': 180,  # Creaciones 6 meses
        'UPDATE': 90,   # Actualizaciones 3 meses
        'VIEW': 30,     # Visualizaciones 30 d√≠as
    },
}

# ===== CONFIGURACI√ìN DE SEGURIDAD ADICIONAL =====

# Configuraci√≥n para auditor√≠a de seguridad
SECURITY_SETTINGS = {
    'ENABLE_AUDIT_LOGGING': True,
    'LOG_FAILED_REQUESTS': True,
    'LOG_SLOW_QUERIES': True,
    'SLOW_QUERY_THRESHOLD': 1.0,  # segundos
    'MAX_AUDIT_LOG_SIZE': 100,  # MB
    'AUDIT_LOG_ROTATION': True,
}

# ===== CONFIGURACI√ìN DE RENDIMIENTO =====

# Optimizaciones para la aplicaci√≥n de auditor√≠a
AUDIT_PERFORMANCE = {
    'BATCH_SIZE': 100,  # Procesar logs en lotes de 100
    'ASYNC_LOGGING': False,  # Cambiar a True en producci√≥n
    'USE_BULK_CREATE': True,  # Usar bulk_create para mejor rendimiento
    'INDEX_OPTIMIZATION': True,  # Crear √≠ndices optimizados
}

# ===== CONFIGURACI√ìN PARA PRODUCCI√ìN =====

# Configuraci√≥n que deber√≠as cambiar en producci√≥n
if not DEBUG:
    # En producci√≥n, usar configuraciones m√°s restrictivas
    AUDIT_SETTINGS.update({
        'RETENTION_DAYS': 365,  # 1 a√±o en producci√≥n
        'AUTO_GENERATE_SUMMARIES': True,
    })
    
    # Configuraci√≥n de logging m√°s restrictiva en producci√≥n
    LOGGING['loggers']['audit']['level'] = 'WARNING'
    
    # Habilitar logging as√≠ncrono en producci√≥n
    AUDIT_PERFORMANCE['ASYNC_LOGGING'] = True

# ===== CONFIGURACI√ìN DE DESARROLLO =====

# Configuraciones espec√≠ficas para desarrollo
if DEBUG:
    # En desarrollo, mantener menos logs para no llenar el disco
    AUDIT_SETTINGS.update({
        'RETENTION_DAYS': 30,  # Solo 30 d√≠as en desarrollo
        'AUTO_GENERATE_SUMMARIES': False,  # No generar res√∫menes autom√°ticamente
    })
    
    # Logging m√°s verbose en desarrollo
    LOGGING['loggers']['audit']['level'] = 'DEBUG'
    
    # Agregar handler adicional para debugging
    LOGGING['handlers']['audit_debug'] = {
        'class': 'logging.FileHandler',
        'filename': 'audit_debug.log',
        'formatter': 'verbose',
        'encoding': 'utf-8',
    }
    
    LOGGING['loggers']['audit']['handlers'].append('audit_debug')

# ===== VALIDACI√ìN DE CONFIGURACI√ìN =====

# Validar que la configuraci√≥n de auditor√≠a sea correcta
def validate_audit_settings():
    """Validar configuraci√≥n de auditor√≠a"""
    required_keys = ['AUTO_AUDIT_PATHS', 'SKIP_AUDIT_PATHS', 'RETENTION_DAYS']
    for key in required_keys:
        if key not in AUDIT_SETTINGS:
            raise ValueError(f"Falta configuraci√≥n de auditor√≠a: {key}")
    
    # Validar que los paths sean listas
    for path_key in ['AUTO_AUDIT_PATHS', 'SKIP_AUDIT_PATHS', 'AUDIT_GET_PATHS']:
        if not isinstance(AUDIT_SETTINGS.get(path_key, []), list):
            raise ValueError(f"La configuraci√≥n {path_key} debe ser una lista")
    
    # Validar rangos num√©ricos
    if AUDIT_SETTINGS['RETENTION_DAYS'] < 1:
        raise ValueError("RETENTION_DAYS debe ser mayor a 0")

# Ejecutar validaci√≥n al importar settings
try:
    validate_audit_settings()
except ValueError as e:
    print(f"Error en configuraci√≥n de auditor√≠a: {e}")
    if not DEBUG:
        raise  # En producci√≥n, fallar si la configuraci√≥n es incorrecta

# ===== CONFIGURACI√ìN DE COMANDOS PERSONALIZADOS =====

# Configuraci√≥n para comandos de gesti√≥n de auditor√≠a
AUDIT_MANAGEMENT = {
    'DEFAULT_EXPORT_LIMIT': 10000,
    'CSV_DELIMITER': ',',
    'CSV_ENCODING': 'utf-8',
    'CLEANUP_BATCH_SIZE': 1000,
    'SUMMARY_GENERATION_HOUR': 2,  # Hora del d√≠a para generar res√∫menes (2 AM)
}

# ===== CONFIGURACI√ìN DE MONITOREO =====

# Configuraci√≥n para monitoreo y alertas
MONITORING = {
    'ENABLE_HEALTH_CHECKS': True,
    'HEALTH_CHECK_INTERVAL': 300,  # 5 minutos
    'ALERT_EMAIL_FROM': 'admin@smartclass.com',
    'ALERT_EMAIL_TO': ['admin@smartclass.com'],
    'ENABLE_EMAIL_ALERTS': False,  # Cambiar a True cuando tengas SMTP configurado
}
if not DEBUG:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')



# ===== NOTAS PARA PRODUCCI√ìN =====

"""
IMPORTANTE: Antes de ir a producci√≥n, aseg√∫rate de:

1. Cambiar SECRET_KEY por una clave segura
2. Establecer DEBUG = False
3. Configurar ALLOWED_HOSTS apropiadamente
4. Configurar base de datos de producci√≥n
5. Establecer configuraci√≥n SMTP para alertas
6. Configurar servidor web (nginx/apache) para servir archivos est√°ticos
7. Configurar CORS adecuadamente (no usar CORS_ALLOW_ALL_ORIGINS = True)
8. Configurar HTTPS
9. Configurar backup de base de datos
10. Configurar rotaci√≥n de logs
11. Configurar tareas programadas (cron) para:
    - Generar res√∫menes diarios de auditor√≠a
    - Limpiar logs antiguos
    - Verificar alertas de seguridad

Comandos cron sugeridos:
# Generar resumen diario a las 2 AM
0 2 * * * cd /path/to/project && python manage.py audit_maintenance summary

# Verificar alertas cada hora
0 * * * * cd /path/to/project && python manage.py audit_maintenance security_alerts

# Limpiar logs antiguos cada domingo a las 3 AM
0 3 * * 0 cd /path/to/project && python manage.py audit_maintenance cleanup --days 90
"""