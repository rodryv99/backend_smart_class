# Generated by Django 5.2.1 on 2025-05-26 23:27

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0003_alter_period_unique_together'),
        ('users', '0002_studentprofile_first_name_studentprofile_last_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FinalGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota_final', models.FloatField(default=0, help_text='Nota final promedio de todos los períodos (0-100 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estado_final', models.CharField(choices=[('approved', 'Aprobado'), ('failed', 'Reprobado')], default='failed', help_text='Estado final: Aprobado (≥51) o Reprobado (<51)', max_length=10)),
                ('periods_count', models.IntegerField(default=0, help_text='Cantidad de períodos considerados en el promedio')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_grades', to='academic.class', verbose_name='Clase')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_grades', to='users.studentprofile', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Nota Final',
                'verbose_name_plural': 'Notas Finales',
                'ordering': ['-class_instance__year', 'student__first_name'],
                'unique_together': {('student', 'class_instance')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser', models.FloatField(default=0, help_text='Nota de Ser (0-5 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('saber', models.FloatField(default=0, help_text='Nota de Saber (0-45 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(45)])),
                ('hacer', models.FloatField(default=0, help_text='Nota de Hacer (0-40 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('decidir', models.FloatField(default=0, help_text='Nota de Decidir (0-5 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('autoevaluacion', models.FloatField(default=0, help_text='Autoevaluación (0-5 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('nota_total', models.FloatField(default=0, help_text='Nota total (suma de todos los campos, 0-100 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('estado', models.CharField(choices=[('approved', 'Aprobado'), ('failed', 'Reprobado')], default='failed', help_text='Estado: Aprobado (≥51) o Reprobado (<51)', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='academic.class', verbose_name='Clase')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='academic.period', verbose_name='Período')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='users.studentprofile', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Nota',
                'verbose_name_plural': 'Notas',
                'ordering': ['-period__year', 'period__period_type', 'period__number', 'student__first_name'],
                'unique_together': {('student', 'class_instance', 'period')},
            },
        ),
    ]
