# Generated by Django 5.2.1 on 2025-06-01 05:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0004_alter_attendance_status_alter_participation_level_and_more'),
        ('users', '0002_studentprofile_first_name_studentprofile_last_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_version', models.CharField(default='1.0', max_length=50)),
                ('algorithm', models.CharField(choices=[('RandomForest', 'Random Forest'), ('LinearRegression', 'Regresión Lineal'), ('GradientBoosting', 'Gradient Boosting')], default='RandomForest', max_length=50)),
                ('training_score', models.FloatField(default=0)),
                ('validation_score', models.FloatField(default=0)),
                ('mean_absolute_error', models.FloatField(default=0)),
                ('training_samples', models.IntegerField(default=0)),
                ('model_file_path', models.CharField(help_text='Ruta al archivo del modelo serializado', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, help_text='Si este modelo está activo para hacer predicciones')),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_models', to='academic.class', verbose_name='Clase')),
            ],
            options={
                'verbose_name': 'Modelo ML',
                'verbose_name_plural': 'Modelos ML',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_grade', models.FloatField(help_text='Nota predicha para el período futuro (0-100 puntos)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence', models.FloatField(default=0, help_text='Nivel de confianza de la predicción (0-100%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('avg_previous_grades', models.FloatField(default=0, help_text='Promedio de notas anteriores usadas')),
                ('attendance_percentage', models.FloatField(default=0, help_text='Porcentaje de asistencia promedio')),
                ('participation_average', models.FloatField(default=0, help_text='Promedio de participación (1-3 escala)')),
                ('model_version', models.CharField(default='1.0', help_text='Versión del modelo usado para la predicción', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='academic.class', verbose_name='Clase')),
                ('predicted_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='academic.period', verbose_name='Período Predicho')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='users.studentprofile', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Predicción',
                'verbose_name_plural': 'Predicciones',
                'ordering': ['-created_at'],
                'unique_together': {('student', 'class_instance', 'predicted_period')},
            },
        ),
        migrations.CreateModel(
            name='PredictionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_grade', models.FloatField(help_text='Nota que se había predicho')),
                ('actual_grade', models.FloatField(help_text='Nota real obtenida')),
                ('difference', models.FloatField(help_text='Diferencia entre predicción y realidad (actual - predicted)')),
                ('absolute_error', models.FloatField(help_text='Error absoluto de la predicción')),
                ('prediction_confidence', models.FloatField(default=0, help_text='Confianza que tenía el modelo')),
                ('prediction_model_version', models.CharField(default='1.0', help_text='Versión del modelo que hizo la predicción', max_length=50)),
                ('prediction_date', models.DateTimeField(help_text='Cuándo se hizo la predicción')),
                ('actual_grade_date', models.DateTimeField(auto_now_add=True)),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_history', to='academic.class', verbose_name='Clase')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_history', to='academic.period', verbose_name='Período')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prediction_history', to='users.studentprofile', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Historial de Predicción',
                'verbose_name_plural': 'Historiales de Predicción',
                'ordering': ['-actual_grade_date'],
                'unique_together': {('student', 'class_instance', 'period')},
            },
        ),
    ]
